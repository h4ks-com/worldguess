services:
  db:
    image: postgis/postgis:17-3.5
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    command: |
      postgres
      -c max_connections=200
      -c shared_buffers=256MB
      -c effective_cache_size=1GB
      -c maintenance_work_mem=64MB
      -c checkpoint_completion_target=0.9
      -c wal_buffers=16MB
      -c default_statistics_target=100
      -c random_page_cost=1.1
      -c effective_io_concurrency=200
      -c work_mem=4MB
      -c min_wal_size=1GB
      -c max_wal_size=4GB
    volumes:
      - ${POSTGRES_DB_PATH}:/var/lib/postgresql/data
      - ./docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    shm_size: 256mb
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  memcached:
    extends:
      file: compose.base.yaml
      service: memcached

  worldguess-frontend:
    extends:
      file: compose.base.yaml
      service: worldguess-frontend

  worldguess-pipelines:
    extends:
      file: compose.base.yaml
      service: worldguess-pipelines
    depends_on:
      db:
        condition: service_healthy
      memcached:
        condition: service_started

  worldguess-backend:
    extends:
      file: compose.base.yaml
      service: worldguess-backend
    depends_on:
      worldguess-frontend:
        condition: service_completed_successfully
      db:
        condition: service_healthy
      memcached:
        condition: service_started
    ports:
      - "8000:8000"

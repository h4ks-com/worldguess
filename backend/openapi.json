{"openapi": "3.1.0", "info": {"title": "Worldguess API", "description": "Simple API for fetching geojson and map tiles", "version": "0.0.1"}, "paths": {"/": {"get": {"tags": ["app"], "summary": "Redirect To App", "operationId": "redirect_to_app__get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/v1/health": {"get": {"tags": ["checks"], "summary": "Check Health", "operationId": "check_health_v1_health_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"additionalProperties": {"type": "string"}, "type": "object", "title": "Response Check Health V1 Health Get"}}}}}}}, "/v1/health/ready": {"get": {"tags": ["checks"], "summary": "Check Ready", "operationId": "check_ready_v1_health_ready_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Status"}}}}}}}, "/v1/game/calculate": {"post": {"tags": ["game"], "summary": "Calculate Population", "description": "Calculate population within a circular area.", "operationId": "calculate_population_v1_game_calculate_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/GameConfig"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PopulationResult"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/v1/game/random": {"post": {"tags": ["game"], "summary": "Create Random Game", "description": "Generate a random game with specified size class.", "operationId": "create_random_game_v1_game_random_post", "parameters": [{"name": "size_class", "in": "query", "required": true, "schema": {"$ref": "#/components/schemas/SizeClass"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/RandomGameResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/v1/game/create": {"post": {"tags": ["game"], "summary": "Create Custom Game", "description": "Create a custom game with specified location and radius.", "operationId": "create_custom_game_v1_game_create_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/GameConfig"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/RandomGameResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/v1/challenge/create": {"post": {"tags": ["challenge"], "summary": "Create Challenge", "description": "Create a new challenge with optional webhook notifications.", "operationId": "create_challenge_v1_challenge_create_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CreateChallengeRequest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/CreateChallengeResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/v1/challenge/{challenge_id}": {"get": {"tags": ["challenge"], "summary": "Get Challenge", "description": "Get challenge details.", "operationId": "get_challenge_v1_challenge__challenge_id__get", "parameters": [{"name": "challenge_id", "in": "path", "required": true, "schema": {"type": "string", "title": "Challenge Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ChallengeDetails"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/v1/challenge/{challenge_id}/guess/{username}": {"get": {"tags": ["challenge"], "summary": "Get User Guess", "description": "Check if user has already submitted a guess.", "operationId": "get_user_guess_v1_challenge__challenge_id__guess__username__get", "parameters": [{"name": "challenge_id", "in": "path", "required": true, "schema": {"type": "string", "title": "Challenge Id"}}, {"name": "username", "in": "path", "required": true, "schema": {"type": "string", "title": "Username"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "object", "additionalProperties": {"anyOf": [{"type": "integer"}, {"type": "null"}]}, "title": "Response Get User Guess V1 Challenge  Challenge Id  Guess  Username  Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/v1/challenge/{challenge_id}/guess": {"post": {"tags": ["challenge"], "summary": "Submit Guess", "description": "Submit a guess for a challenge.", "operationId": "submit_guess_v1_challenge__challenge_id__guess_post", "parameters": [{"name": "challenge_id", "in": "path", "required": true, "schema": {"type": "string", "title": "Challenge Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SubmitGuessRequest"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SubmitGuessResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/v1/challenge/{challenge_id}/end": {"post": {"tags": ["challenge"], "summary": "End Challenge", "description": "End a challenge, calculate rankings, send webhooks, and cleanup.", "operationId": "end_challenge_v1_challenge__challenge_id__end_post", "parameters": [{"name": "challenge_id", "in": "path", "required": true, "schema": {"type": "string", "title": "Challenge Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EndChallengeResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}}, "components": {"schemas": {"ChallengeDetails": {"properties": {"challenge_id": {"type": "string", "title": "Challenge Id"}, "game_id": {"type": "string", "title": "Game Id"}, "latitude": {"type": "number", "title": "Latitude"}, "longitude": {"type": "number", "title": "Longitude"}, "radius_km": {"type": "number", "title": "Radius Km"}, "size_class": {"anyOf": [{"$ref": "#/components/schemas/SizeClass"}, {"type": "null"}]}}, "type": "object", "required": ["challenge_id", "game_id", "latitude", "longitude", "radius_km"], "title": "ChallengeDetails", "description": "Details of a challenge."}, "CreateChallengeRequest": {"properties": {"latitude": {"type": "number", "maximum": 90.0, "minimum": -90.0, "title": "Latitude"}, "longitude": {"type": "number", "maximum": 180.0, "minimum": -180.0, "title": "Longitude"}, "radius_km": {"type": "number", "exclusiveMinimum": 0.0, "title": "Radius Km"}, "size_class": {"anyOf": [{"$ref": "#/components/schemas/SizeClass"}, {"type": "null"}]}, "webhook_url": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Webhook Url"}, "webhook_token": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Webhook Token"}, "webhook_extra_params": {"anyOf": [{"type": "object"}, {"type": "null"}], "title": "Webhook Extra Params"}}, "type": "object", "required": ["latitude", "longitude", "radius_km"], "title": "CreateChallengeRequest", "description": "Request to create a challenge."}, "CreateChallengeResponse": {"properties": {"challenge_id": {"type": "string", "title": "Challenge Id"}, "game_id": {"type": "string", "title": "Game Id"}, "challenge_url": {"type": "string", "title": "Challenge Url"}}, "type": "object", "required": ["challenge_id", "game_id", "challenge_url"], "title": "CreateChallengeResponse", "description": "Response for challenge creation."}, "EndChallengeResponse": {"properties": {"success": {"type": "boolean", "title": "Success"}, "message": {"type": "string", "title": "Message"}, "actual_population": {"type": "integer", "title": "Actual Population"}, "rankings": {"items": {"type": "object"}, "type": "array", "title": "Rankings"}}, "type": "object", "required": ["success", "message", "actual_population", "rankings"], "title": "EndChallengeResponse", "description": "Response for ending a challenge."}, "GameConfig": {"properties": {"latitude": {"type": "number", "maximum": 90.0, "minimum": -90.0, "title": "Latitude"}, "longitude": {"type": "number", "maximum": 180.0, "minimum": -180.0, "title": "Longitude"}, "radius_km": {"type": "number", "exclusiveMinimum": 0.0, "title": "Radius Km"}, "size_class": {"anyOf": [{"$ref": "#/components/schemas/SizeClass"}, {"type": "null"}]}}, "type": "object", "required": ["latitude", "longitude", "radius_km"], "title": "GameConfig", "description": "Configuration for a population guessing game."}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "type": "array", "title": "Detail"}}, "type": "object", "title": "HTTPValidationError"}, "PopulationResult": {"properties": {"population": {"type": "integer", "title": "Population"}, "latitude": {"type": "number", "title": "Latitude"}, "longitude": {"type": "number", "title": "Longitude"}, "radius_km": {"type": "number", "title": "Radius Km"}, "size_class": {"anyOf": [{"$ref": "#/components/schemas/SizeClass"}, {"type": "null"}]}}, "type": "object", "required": ["population", "latitude", "longitude", "radius_km"], "title": "PopulationResult", "description": "Result of population calculation within a circle."}, "RandomGameResponse": {"properties": {"game_id": {"type": "string", "title": "Game Id"}, "latitude": {"type": "number", "title": "Latitude"}, "longitude": {"type": "number", "title": "Longitude"}, "radius_km": {"type": "number", "title": "Radius Km"}, "size_class": {"anyOf": [{"$ref": "#/components/schemas/SizeClass"}, {"type": "null"}]}, "share_url": {"type": "string", "title": "Share Url"}}, "type": "object", "required": ["game_id", "latitude", "longitude", "radius_km", "share_url"], "title": "RandomGameResponse", "description": "Response for random game generation."}, "SizeClass": {"type": "string", "enum": ["regional", "country", "continental"], "title": "SizeClass"}, "Status": {"properties": {"status": {"type": "string", "enum": ["ready", "not ready"], "title": "Status"}, "pipeline_status": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Pipeline Status"}}, "type": "object", "required": ["status"], "title": "Status"}, "SubmitGuessRequest": {"properties": {"username": {"type": "string", "maxLength": 50, "minLength": 1, "title": "Username"}, "guess": {"type": "integer", "minimum": 0.0, "title": "Guess"}}, "type": "object", "required": ["username", "guess"], "title": "SubmitGuessRequest", "description": "Request to submit a guess for a challenge."}, "SubmitGuessResponse": {"properties": {"success": {"type": "boolean", "title": "Success"}, "message": {"type": "string", "title": "Message"}}, "type": "object", "required": ["success", "message"], "title": "SubmitGuessResponse", "description": "Response for guess submission."}, "ValidationError": {"properties": {"loc": {"items": {"anyOf": [{"type": "string"}, {"type": "integer"}]}, "type": "array", "title": "Location"}, "msg": {"type": "string", "title": "Message"}, "type": {"type": "string", "title": "Error Type"}}, "type": "object", "required": ["loc", "msg", "type"], "title": "ValidationError"}}}}